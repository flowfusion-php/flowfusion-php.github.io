float(-9.223372036854776E+18)
float(-9.223372036854776E+18)
Done
*** Testing array_fill() : usage variations ***
--- Testing array_fill() with different types of array values for 'val' argument ---
-- Iteration 1 --
array(2) {
  [0]=>
  array(0) {
  }
  [1]=>
  array(0) {
  }
}
-- Iteration 2 --
array(2) {
  [0]=>
  array(4) {
    [0]=>
    int(1)
    [1]=>
    int(2)
    [2]=>
    int(3)
    [3]=>
    int(4)
  }
  [1]=>
  array(4) {
    [0]=>
    int(1)
    [1]=>
    int(2)
    [2]=>
    int(3)
    [3]=>
    int(4)
  }
}
-- Iteration 3 --
array(2) {
  [0]=>
  array(2) {
    [1]=>
    string(2) "Hi"
    [2]=>
    string(5) "Hello"
  }
  [1]=>
  array(2) {
    [1]=>
    string(2) "Hi"
    [2]=>
    string(5) "Hello"
  }
}
-- Iteration 4 --
array(2) {
  [0]=>
  array(3) {
    [0]=>
    string(7) "Saffron"
    [1]=>
    string(5) "White"
    [2]=>
    string(5) "Green"
  }
  [1]=>
  array(3) {
    [0]=>
    string(7) "Saffron"
    [1]=>
    string(5) "White"
    [2]=>
    string(5) "Green"
  }
}
-- Iteration 5 --
array(2) {
  [0]=>
  array(2) {
    ["color"]=>
    string(3) "red"
    ["item"]=>
    string(3) "pen"
  }
  [1]=>
  array(2) {
    ["color"]=>
    string(3) "red"
    ["item"]=>
    string(3) "pen"
  }
}
-- Iteration 6 --
array(2) {
  [0]=>
  array(2) {
    ["color"]=>
    string(3) "red"
    [2]=>
    string(6) "green "
  }
  [1]=>
  array(2) {
    ["color"]=>
    string(3) "red"
    [2]=>
    string(6) "green "
  }
}
-- Iteration 7 --
array(2) {
  [0]=>
  array(2) {
    ["colour"]=>
    string(3) "red"
    ["item"]=>
    string(3) "pen"
  }
  [1]=>
  array(2) {
    ["colour"]=>
    string(3) "red"
    ["item"]=>
    string(3) "pen"
  }
}
-- Iteration 8 --
array(2) {
  [0]=>
  array(2) {
    [1]=>
    string(3) "red"
    [0]=>
    string(5) "green"
  }
  [1]=>
  array(2) {
    [1]=>
    string(3) "red"
    [0]=>
    string(5) "green"
  }
}
-- Iteration 9 --
array(2) {
  [0]=>
  array(2) {
    [1]=>
    string(3) "red"
    [0]=>
    string(5) "green"
  }
  [1]=>
  array(2) {
    [1]=>
    string(3) "red"
    [0]=>
    string(5) "green"
  }
}
-- Iteration 10 --
array(2) {
  [0]=>
  array(3) {
    [1]=>
    string(2) "Hi"
    ["color"]=>
    string(3) "red"
    ["item"]=>
    string(3) "pen"
  }
  [1]=>
  array(3) {
    [1]=>
    string(2) "Hi"
    ["color"]=>
    string(3) "red"
    ["item"]=>
    string(3) "pen"
  }
}
-- Iteration 11 --
array(2) {
  [0]=>
  array(2) {
    [""]=>
    string(2) "Hi"
    [1]=>
    string(5) "Green"
  }
  [1]=>
  array(2) {
    [""]=>
    string(2) "Hi"
    [1]=>
    string(5) "Green"
  }
}
-- Iteration 12 --
array(2) {
  [0]=>
  array(2) {
    [""]=>
    int(1)
    ["color"]=>
    string(5) "green"
  }
  [1]=>
  array(2) {
    [""]=>
    int(1)
    ["color"]=>
    string(5) "green"
  }
}
-- Iteration 13 --
array(2) {
  [0]=>
  array(3) {
    [0]=>
    string(7) "Saffron"
    [1]=>
    string(5) "White"
    [2]=>
    string(5) "Green"
  }
  [1]=>
  array(3) {
    [0]=>
    string(7) "Saffron"
    [1]=>
    string(5) "White"
    [2]=>
    string(5) "Green"
  }
}
Donestring(11) "random_var:"
float(-9.223372036854776E+18)
int(14)
float(-9.223372036854776E+18)
Calling function: intdiv with arguments: -9.2233720368548E+18, -9.2233720368548E+18
Calling function: hash_hmac_file with arguments: -9.2233720368548E+18, 14, -9.2233720368548E+18, 14
Error calling function hash_hmac_file: hash_hmac_file(): Argument #1 ($algo) must be a valid cryptographic hashing algorithm
Calling function: strcasecmp with arguments: -9.2233720368548E+18, -9.2233720368548E+18
Calling function: xmlwriter_end_element with arguments: 14
Error calling function xmlwriter_end_element: xmlwriter_end_element(): Argument #1 ($writer) must be of type XMLWriter, int given
Calling function: xmlwriter_end_dtd_entity with arguments: 14
Error calling function xmlwriter_end_dtd_entity: xmlwriter_end_dtd_entity(): Argument #1 ($writer) must be of type XMLWriter, int given
Calling function: array_diff with arguments: 14, -9.2233720368548E+18
Error calling function array_diff: array_diff(): Argument #1 ($array) must be of type array, int given
Calling function: stream_get_line with arguments: -9.2233720368548E+18, -9.2233720368548E+18, -9.2233720368548E+18
Error calling function stream_get_line: stream_get_line(): Argument #1 ($stream) must be of type resource, float given
Calling function: stream_socket_shutdown with arguments: -9.2233720368548E+18, 14
Error calling function stream_socket_shutdown: stream_socket_shutdown(): Argument #1 ($stream) must be of type resource, float given
Calling function: json_last_error_msg with arguments: 
Calling function: uniqid with arguments: -9.2233720368548E+18, -9.2233720368548E+18
Calling function: wordwrap with arguments: -9.2233720368548E+18, 14, -9.2233720368548E+18, 14
Calling function: get_resource_type with arguments: -9.2233720368548E+18
Error calling function get_resource_type: get_resource_type(): Argument #1 ($resource) must be of type resource, float given
Calling function: date_parse with arguments: 14
Calling function: is_iterable with arguments: 14
Calling function: levenshtein with arguments: 14, -9.2233720368548E+18, 14, -9.2233720368548E+18, 14
/home/phpfuzz/WorkSpace/flowfusion/php-src/ext/standard/levenshtein.c:53:16: runtime error: signed integer overflow: -9223372036854775808 + -9223372036854775808 cannot be represented in type 'long'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /home/phpfuzz/WorkSpace/flowfusion/php-src/ext/standard/levenshtein.c:53:16 in